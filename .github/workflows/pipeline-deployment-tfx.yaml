name: Deploy Vertex AI TFX Pipeline
on:
  workflow_dispatch:

permissions:
  contents: "read"
  id-token: "write"

env:
  ENVIRONMENT: dev
  PROJECT_ID: sinuous-myth-447220-m2
  SERVICE_ACCOUNT: sinuous-sa-github@sinuous-myth-447220-m2.iam.gserviceaccount.com
  REGION: us-east1
  DOCKER_REPO: europe-west4-docker.pkg.dev/sinuous-myth-447220-m2/docker-repo
  WORKLOAD_ID_PROVIDER: projects/871125057680/locations/global/workloadIdentityPools/gh-pool2/providers/gh-provider
  GCS_BUCKET: gs://sinuous-creditcards-dev

jobs:
  run-pipeline:
    name: Deploy Vertex AI TFX Pipeline
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
      # Step 2: Set Up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install Dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kfp tfx
      # Step 2: Authenticate with Google Cloud
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ env.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          access_token_lifetime: 7200s

      # Step 3: Compile the TFX Pipeline
      # Step 3: Compile the TFX Pipeline
      - name: Compile TFX Pipeline
        run: |
          cd ./tfx-pipeline # Navigate to the root directory of the TFX pipeline
          python build/utils.py --mode compile-pipeline --pipeline-name example_pipeline
        shell: bash

      # Step 4: Upload Compiled Pipeline JSON to GCS
      - name: Upload Compiled Pipeline to GCS
        run: |
          cd ./tfx-pipeline # Navigate to the root directory of the TFX pipeline
          gsutil cp example_pipeline.json ${{ env.GCS_BUCKET }}
        shell: bash
